
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftADDSUBleftMULDIVADD BEC DIV DO ELSE END EQ FALSE GEQ GRTR ID IF LEQ LESS LPAR MUL NEQ NUM READ RPAR SEM SUB THEN TRUE WHILE WRITEProgram : StatementsStatements : StatementStatements : Statements SEM StatementStatement : If\n                 | While\n                 | Write\n                 | Read\n                 | AssignmentIf : IF Comparison THEN Statements ENDWhile : WHILE Comparison DO Statements ENDIf : IF Comparison THEN Statements ELSE Statements ENDAssignment : Id BEC ExpressionComparison : Expression Relation ExpressionWrite : WRITE ExpressionRead : READ IdCondition : Comparison\n                 | BooleanBoolean : TRUE\n               | FALSERelation : EQ\n                | NEQ\n                | LESS\n                | LEQ\n                | GRTR\n                | GEQExpression : Expression ADD Expression\n                  | Expression SUB Expression\n                  | Expression MUL Expression\n                  | Expression DIV ExpressionExpression : LPAR Expression RPARExpression : NUMExpression : IdId : ID'
    
_lr_action_items = {'IF':([0,15,26,39,50,],[9,9,9,9,9,]),'WHILE':([0,15,26,39,50,],[10,10,10,10,10,]),'WRITE':([0,15,26,39,50,],[11,11,11,11,11,]),'READ':([0,15,26,39,50,],[12,12,12,12,12,]),'ID':([0,9,10,11,12,15,18,24,26,27,28,29,30,31,32,33,34,35,36,37,39,50,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,-20,-21,-22,-23,-24,-25,14,14,]),'$end':([1,2,3,4,5,6,7,8,14,19,20,22,23,25,40,43,44,45,46,47,49,51,53,],[0,-1,-2,-4,-5,-6,-7,-8,-33,-31,-32,-14,-15,-3,-12,-26,-27,-28,-29,-30,-9,-10,-11,]),'SEM':([2,3,4,5,6,7,8,14,19,20,22,23,25,40,41,43,44,45,46,47,48,49,51,52,53,],[15,-2,-4,-5,-6,-7,-8,-33,-31,-32,-14,-15,-3,-12,15,-26,-27,-28,-29,-30,15,-9,-10,15,-11,]),'END':([3,4,5,6,7,8,14,19,20,22,23,25,40,41,43,44,45,46,47,48,49,51,52,53,],[-2,-4,-5,-6,-7,-8,-33,-31,-32,-14,-15,-3,-12,49,-26,-27,-28,-29,-30,51,-9,-10,53,-11,]),'ELSE':([3,4,5,6,7,8,14,19,20,22,23,25,40,41,43,44,45,46,47,49,51,53,],[-2,-4,-5,-6,-7,-8,-33,-31,-32,-14,-15,-3,-12,50,-26,-27,-28,-29,-30,-9,-10,-11,]),'LPAR':([9,10,11,18,24,27,28,29,30,31,32,33,34,35,36,37,],[18,18,18,18,18,18,18,18,18,18,-20,-21,-22,-23,-24,-25,]),'NUM':([9,10,11,18,24,27,28,29,30,31,32,33,34,35,36,37,],[19,19,19,19,19,19,19,19,19,19,-20,-21,-22,-23,-24,-25,]),'BEC':([13,14,],[24,-33,]),'ADD':([14,17,19,20,22,38,40,42,43,44,45,46,47,],[-33,28,-31,-32,28,28,28,28,-26,-27,-28,-29,-30,]),'SUB':([14,17,19,20,22,38,40,42,43,44,45,46,47,],[-33,29,-31,-32,29,29,29,29,-26,-27,-28,-29,-30,]),'MUL':([14,17,19,20,22,38,40,42,43,44,45,46,47,],[-33,30,-31,-32,30,30,30,30,30,30,-28,-29,-30,]),'DIV':([14,17,19,20,22,38,40,42,43,44,45,46,47,],[-33,31,-31,-32,31,31,31,31,31,31,-28,-29,-30,]),'EQ':([14,17,19,20,43,44,45,46,47,],[-33,32,-31,-32,-26,-27,-28,-29,-30,]),'NEQ':([14,17,19,20,43,44,45,46,47,],[-33,33,-31,-32,-26,-27,-28,-29,-30,]),'LESS':([14,17,19,20,43,44,45,46,47,],[-33,34,-31,-32,-26,-27,-28,-29,-30,]),'LEQ':([14,17,19,20,43,44,45,46,47,],[-33,35,-31,-32,-26,-27,-28,-29,-30,]),'GRTR':([14,17,19,20,43,44,45,46,47,],[-33,36,-31,-32,-26,-27,-28,-29,-30,]),'GEQ':([14,17,19,20,43,44,45,46,47,],[-33,37,-31,-32,-26,-27,-28,-29,-30,]),'RPAR':([14,19,20,38,43,44,45,46,47,],[-33,-31,-32,47,-26,-27,-28,-29,-30,]),'THEN':([14,16,19,20,42,43,44,45,46,47,],[-33,26,-31,-32,-13,-26,-27,-28,-29,-30,]),'DO':([14,19,20,21,42,43,44,45,46,47,],[-33,-31,-32,39,-13,-26,-27,-28,-29,-30,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Program':([0,],[1,]),'Statements':([0,26,39,50,],[2,41,48,52,]),'Statement':([0,15,26,39,50,],[3,25,3,3,3,]),'If':([0,15,26,39,50,],[4,4,4,4,4,]),'While':([0,15,26,39,50,],[5,5,5,5,5,]),'Write':([0,15,26,39,50,],[6,6,6,6,6,]),'Read':([0,15,26,39,50,],[7,7,7,7,7,]),'Assignment':([0,15,26,39,50,],[8,8,8,8,8,]),'Id':([0,9,10,11,12,15,18,24,26,27,28,29,30,31,39,50,],[13,20,20,20,23,13,20,20,13,20,20,20,20,20,13,13,]),'Comparison':([9,10,],[16,21,]),'Expression':([9,10,11,18,24,27,28,29,30,31,],[17,17,22,38,40,42,43,44,45,46,]),'Relation':([17,],[27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Program","S'",1,None,None,None),
  ('Program -> Statements','Program',1,'p_program','ply-parser.py',292),
  ('Statements -> Statement','Statements',1,'p_statements_statement','ply-parser.py',296),
  ('Statements -> Statements SEM Statement','Statements',3,'p_statements_statements','ply-parser.py',300),
  ('Statement -> If','Statement',1,'p_statement','ply-parser.py',306),
  ('Statement -> While','Statement',1,'p_statement','ply-parser.py',307),
  ('Statement -> Write','Statement',1,'p_statement','ply-parser.py',308),
  ('Statement -> Read','Statement',1,'p_statement','ply-parser.py',309),
  ('Statement -> Assignment','Statement',1,'p_statement','ply-parser.py',310),
  ('If -> IF Comparison THEN Statements END','If',5,'p_if','ply-parser.py',314),
  ('While -> WHILE Comparison DO Statements END','While',5,'p_while','ply-parser.py',318),
  ('If -> IF Comparison THEN Statements ELSE Statements END','If',7,'p_if_else','ply-parser.py',322),
  ('Assignment -> Id BEC Expression','Assignment',3,'p_assignment','ply-parser.py',326),
  ('Comparison -> Expression Relation Expression','Comparison',3,'p_comparison','ply-parser.py',330),
  ('Write -> WRITE Expression','Write',2,'p_write','ply-parser.py',334),
  ('Read -> READ Id','Read',2,'p_read','ply-parser.py',338),
  ('Condition -> Comparison','Condition',1,'p_condition','ply-parser.py',342),
  ('Condition -> Boolean','Condition',1,'p_condition','ply-parser.py',343),
  ('Boolean -> TRUE','Boolean',1,'p_boolean','ply-parser.py',347),
  ('Boolean -> FALSE','Boolean',1,'p_boolean','ply-parser.py',348),
  ('Relation -> EQ','Relation',1,'p_relation','ply-parser.py',352),
  ('Relation -> NEQ','Relation',1,'p_relation','ply-parser.py',353),
  ('Relation -> LESS','Relation',1,'p_relation','ply-parser.py',354),
  ('Relation -> LEQ','Relation',1,'p_relation','ply-parser.py',355),
  ('Relation -> GRTR','Relation',1,'p_relation','ply-parser.py',356),
  ('Relation -> GEQ','Relation',1,'p_relation','ply-parser.py',357),
  ('Expression -> Expression ADD Expression','Expression',3,'p_expression_binary','ply-parser.py',361),
  ('Expression -> Expression SUB Expression','Expression',3,'p_expression_binary','ply-parser.py',362),
  ('Expression -> Expression MUL Expression','Expression',3,'p_expression_binary','ply-parser.py',363),
  ('Expression -> Expression DIV Expression','Expression',3,'p_expression_binary','ply-parser.py',364),
  ('Expression -> LPAR Expression RPAR','Expression',3,'p_expression_parenthesis','ply-parser.py',368),
  ('Expression -> NUM','Expression',1,'p_expression_num','ply-parser.py',372),
  ('Expression -> Id','Expression',1,'p_expression_id','ply-parser.py',376),
  ('Id -> ID','Id',1,'p_id','ply-parser.py',380),
]
